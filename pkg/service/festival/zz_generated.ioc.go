//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli

package festival

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	util "github.com/alibaba/ioc-golang/autowire/util"
	rpc_service "github.com/alibaba/ioc-golang/extension/autowire/rpc/rpc_service"
	"github.com/ioc-golang/shopping-system/pkg/model/dto"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &service_{}
		},
	})
	rpc_service.RegisterStructDescriptor(&autowire.StructDescriptor{
		Alias: "github.com/ioc-golang/shopping-system/pkg/service/festival/api.ServiceIOCRPCClient",
		Factory: func() interface{} {
			return &Service{}
		},
	})
}

type service_ struct {
	ListCards_ func(pageIndex, pageSize int) ([]dto.Card, int, error)
}

func (s *service_) ListCards(pageIndex, pageSize int) ([]dto.Card, int, error) {
	return s.ListCards_(pageIndex, pageSize)
}

type ServiceIOCInterface interface {
	ListCards(pageIndex, pageSize int) ([]dto.Card, int, error)
}

func GetService() (*Service, error) {
	i, err := rpc_service.GetImpl(util.GetSDIDByStructPtr(new(Service)))
	if err != nil {
		return nil, err
	}
	impl := i.(*Service)
	return impl, nil
}
func GetServiceIOCInterface() (ServiceIOCInterface, error) {
	i, err := rpc_service.GetImplWithProxy(util.GetSDIDByStructPtr(new(Service)))
	if err != nil {
		return nil, err
	}
	impl := i.(ServiceIOCInterface)
	return impl, nil
}
